// Generated by CoffeeScript 1.10.0
(function() {
  var baseURL, containsPageNumber, from, i, isA6A5A1X2COMBO, j, k, len, makeUrl, next, oneWayLinks, pad6, pageChain, pageNum, prev, ref, specialNextLinks, specialPageChains, specialPages, specialPages_reverse, specialPrevLinks, to, url;

  baseURL = 'http://www.mspaintadventures.com/';

  specialPageChains = [[4298, 4300], [4937, 4939], [4987, 4989], [9801, 9805], [6720, 6724], [6725, 6727]];

  oneWayLinks = {
    6721: 6720,
    6722: 6720,
    6723: 6720,
    6726: 6725
  };

  specialNextLinks = {};

  specialPrevLinks = {};

  specialPages = {
    1901: 'http://www.mspaintadventures.com/?s=6',
    7680: 'http://www.mspaintadventures.com/007680/007680.html',
    6715: 'http://www.mspaintadventures.com/DOTA/'
  };

  specialPages_reverse = {};

  for (pageNum in specialPages) {
    url = specialPages[pageNum];
    specialPages_reverse[url] = parseInt(pageNum);
  }

  pad6 = function(pageNum) {
    var pad, str;
    pad = '000000';
    str = '' + pageNum;
    return pad.substring(0, pad.length - str.length) + str;
  };

  isA6A5A1X2COMBO = function(pageNum) {
    return (7688 <= pageNum && pageNum <= 7824);
  };

  makeUrl = function(pageNum) {
    var php;
    console.assert(typeof pageNum === 'number');
    if (pageNum === 1900) {
      pageNum = 1901;
    }
    php = '';
    if (pageNum in specialPages) {
      return specialPages[pageNum];
    } else if (pageNum === 6009) {
      php = 'cascade.php';
    } else if (pageNum === 5982) {
      php = 'sbahj.php';
    } else if ((5664 <= pageNum && pageNum <= 5981)) {
      php = 'scratch.php';
    } else if ((8375 <= pageNum && pageNum <= 8430)) {
      php = 'ACT6ACT6.php';
    } else if ((7614 <= pageNum && pageNum <= 7677)) {
      php = 'trickster.php';
    } else if (isA6A5A1X2COMBO(pageNum)) {
      php = 'ACT6ACT5ACT1x2COMBO.php';
    }
    return baseURL + php + '?s=6&p=' + pad6(pageNum);
  };

  containsPageNumber = function(url) {
    if (url in specialPages_reverse) {
      return true;
    }
    return /p=(\d+)/.exec(url).length > 0;
  };

  window.getPageNumber = function(url) {
    if (url in specialPages_reverse) {
      return specialPages_reverse[url];
    }
    return parseInt(/p=(\d+)/.exec(url)[1]);
  };

  window.nextUrl = function(url) {
    if (url in specialNextLinks) {
      return specialNextLinks[url];
    }
    pageNum = getPageNumber(url);
    if (isA6A5A1X2COMBO(pageNum)) {
      pageNum += 2;
    } else {
      pageNum += 1;
    }
    return makeUrl(pageNum);
  };

  window.prevUrl = function(url) {
    if (url in specialPrevLinks) {
      return specialPrevLinks[url];
    }
    pageNum = getPageNumber(url);
    if (isA6A5A1X2COMBO(pageNum)) {
      pageNum -= 2;
    } else {
      pageNum -= 1;
    }
    return makeUrl(pageNum);
  };

  window.isFlashPage = function(url) {
    if (!containsPageNumber(url)) {
      return true;
    }
    return pad6(getPageNumber(url)) in window.flashPages;
  };

  window.isHomestuckUrl = function(url) {
    return url.startsWith(baseURL) && containsPageNumber(url);
  };

  for (j = 0, len = specialPageChains.length; j < len; j++) {
    pageChain = specialPageChains[j];
    for (i = k = 0, ref = pageChain.length - 2; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {
      prev = makeUrl(pageChain[i]);
      next = makeUrl(pageChain[i + 1]);
      specialNextLinks[prev] = next;
      specialPrevLinks[next] = prev;
    }
  }

  for (from in oneWayLinks) {
    to = oneWayLinks[from];
    from = makeUrl(parseInt(from));
    to = makeUrl(to);
    specialNextLinks[from] = to;
    specialPrevLinks[from] = to;
  }

}).call(this);

//# sourceMappingURL=urls.js.map
